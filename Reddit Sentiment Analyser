{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: praw in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (7.7.1)\n",
      "Requirement already satisfied: prawcore<3,>=2.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from praw) (2.4.0)\n",
      "Requirement already satisfied: update-checker>=0.18 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from praw) (0.18.0)\n",
      "Requirement already satisfied: websocket-client>=0.54.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from praw) (0.58.0)\n",
      "Requirement already satisfied: requests<3.0,>=2.6.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from prawcore<3,>=2.1->praw) (2.31.0)\n",
      "Requirement already satisfied: six in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from websocket-client>=0.54.0->praw) (1.16.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (2023.7.22)\n",
      "Requirement already satisfied: vaderSentiment in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (3.3.2)\n",
      "Requirement already satisfied: requests in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from vaderSentiment) (2.31.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests->vaderSentiment) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests->vaderSentiment) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests->vaderSentiment) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests->vaderSentiment) (2023.7.22)\n",
      "Requirement already satisfied: google-api-python-client in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (2.103.0)\n",
      "Requirement already satisfied: google-auth-httplib2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (0.1.1)\n",
      "Requirement already satisfied: google-auth-oauthlib in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (1.1.0)\n",
      "Requirement already satisfied: httplib2<1.dev0,>=0.15.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-python-client) (0.22.0)\n",
      "Requirement already satisfied: google-auth<3.0.0.dev0,>=1.19.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-python-client) (2.23.2)\n",
      "Requirement already satisfied: google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-python-client) (2.12.0)\n",
      "Requirement already satisfied: uritemplate<5,>=3.0.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-python-client) (4.1.1)\n",
      "Requirement already satisfied: requests-oauthlib>=0.7.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-auth-oauthlib) (1.3.1)\n",
      "Requirement already satisfied: googleapis-common-protos<2.0.dev0,>=1.56.2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (1.60.0)\n",
      "Requirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0.dev0,>=3.19.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (4.24.4)\n",
      "Requirement already satisfied: requests<3.0.0.dev0,>=2.18.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2.31.0)\n",
      "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (5.3.1)\n",
      "Requirement already satisfied: pyasn1-modules>=0.2.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (0.2.8)\n",
      "Requirement already satisfied: rsa<5,>=3.1.4 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (4.9)\n",
      "Requirement already satisfied: pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from httplib2<1.dev0,>=0.15.0->google-api-python-client) (3.0.9)\n",
      "Requirement already satisfied: oauthlib>=3.0.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib) (3.2.2)\n",
      "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from pyasn1-modules>=0.2.1->google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (0.4.8)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2023.7.22)\n",
      "Requirement already satisfied: pandas in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (2.0.3)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from pandas) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.1 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: numpy>=1.21.0 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from pandas) (1.24.3)\n",
      "Requirement already satisfied: six>=1.5 in /Users/alexzuffoletti/anaconda3/lib/python3.11/site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "# Install necessary libraries\n",
    "!pip3 install praw\n",
    "!pip3 install vaderSentiment\n",
    "!pip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib\n",
    "!pip3 install pandas\n",
    "\n",
    "# Import required libraries\n",
    "import praw\n",
    "from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n",
    "import pandas as pd\n",
    "import os\n",
    "from google_auth_oauthlib.flow import InstalledAppFlow\n",
    "from google.oauth2.credentials import Credentials\n",
    "from googleapiclient.discovery import build\n",
    "from google.auth.transport.requests import Request\n",
    "import datetime\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Connect to Reddit and fetch comments\n",
    "reddit = praw.Reddit(\n",
    "     client_id=",
    "     client_secret=
    "     user_agent=\"
    "     check_for_async=
    " )\n",
    "post_data = []\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# For capturing posts from the past year\n",
    "one_week_ago = int((datetime.datetime.utcnow() - datetime.timedelta(days=7)).timestamp())\n",
    "one_year_ago = int((datetime.datetime.utcnow() - datetime.timedelta(days=365)).timestamp())\n",
    "\n",
    "for submission in reddit.subreddit('politics').search('congress', time_filter='week', limit=2):\n",
    "    if submission.created_utc >= one_week_ago:\n",
    "        # Fetch top comments\n",
    "        submission.comment_sort = 'top'\n",
    "        submission.comments.replace_more(limit=1)\n",
    "        if len(submission.comments) > 1:\n",
    "            top_comment = submission.comments[1].body  # Fetch the second comment\n",
    "        else:\n",
    "            top_comment = \"No second top comment available\"  # Handle cases where there might not be a second comment\n",
    "\n",
    "        \n",
    "        data = {\n",
    "            'author': submission.author.name if submission.author else \"Deleted\",\n",
    "            'title': submission.title,\n",
    "            'created_utc': submission.created_utc,\n",
    "            'permalink': submission.permalink,\n",
    "            'url': submission.url,\n",
    "            'date_posted': datetime.datetime.utcfromtimestamp(submission.created_utc).strftime('%m/%d/%Y'),\n",
    "            'text': submission.selftext,\n",
    "            'score': submission.score,\n",
    "            'id': submission.id,\n",
    "            'subreddit': submission.subreddit.display_name,\n",
    "            'num_comments': submission.num_comments,\n",
    "            'upvotes': submission.ups,\n",
    "            'top_comment': top_comment,\n",
    "            'num_comments': submission.num_comments,\n",
    "            'upvotes': submission.ups\n",
    "        }\n",
    "        post_data.append(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            author                                              title  \\\n",
      "0      TommyAdagio     Congressional Term Limits Might Break Congress   \n",
      "1  Afraid-Sky-5052  Matt Gaetz Succeeds Ted Cruz as the Most Hated...   \n",
      "\n",
      "    created_utc                                          permalink  \\\n",
      "0  1.696720e+09  /r/politics/comments/172jrkc/congressional_ter...   \n",
      "1  1.696509e+09  /r/politics/comments/170gpao/matt_gaetz_succee...   \n",
      "\n",
      "                                                 url date_posted text  score  \\\n",
      "0  https://www.nytimes.com/2023/10/07/opinion/ter...  10/07/2023        4986   \n",
      "1  https://www.advocate.com/voices/matt-gaetz-hou...  10/05/2023       10768   \n",
      "\n",
      "        id subreddit  num_comments  upvotes  \\\n",
      "0  172jrkc  politics           695     4986   \n",
      "1  170gpao  politics           620    10768   \n",
      "\n",
      "                              top_comment  compound sentiment  \n",
      "0             Congress is already broken.   -0.4767  negative  \n",
      "1  Ted Cruz is suspiciously quiet lately.   -0.4019  negative  \n"
     ]
    }
   ],
   "source": [
    "# Use VADER sentiment analysis on fetched top comments\n",
    "analyzer = SentimentIntensityAnalyzer()\n",
    "for post in post_data:\n",
    "    sentiment = analyzer.polarity_scores(post['top_comment'])\n",
    "    post['compound'] = sentiment['compound']\n",
    "    post['sentiment'] = 'positive' if sentiment['compound'] >= 0.05 else 'neutral' if sentiment['compound'] > -0.05 and sentiment['compound'] < 0.05 else 'negative'\n",
    "\n",
    "# Convert to pandas DataFrame and display\n",
    "df = pd.DataFrame(post_data)\n",
    "pd.set_option('display.max_rows', None)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45 cells appended.\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Connect to Google Sheets\n",
    "SCOPES = ['https://www.googleapis.com/auth/spreadsheets']\n",
    "SPREADSHEET_id = \"1PpPs51H3i_yjEqbWAU3rrQtV74ZioPg5pkp3Ah3r3go\"\n",
    "\n",
    "def get_google_sheets_service():\n",
    "    creds = None\n",
    "    if os.path.exists('token.json'):\n",
    "        creds = Credentials.from_authorized_user_file('token.json', SCOPES)\n",
    "    if not creds or not creds.valid:\n",
    "        if creds and creds.expired and creds.refresh_token:\n",
    "            creds.refresh(Request())\n",
    "        else:\n",
    "            flow = InstalledAppFlow.from_client_secrets_file('/Users/alexzuffoletti/Desktop/content analysis porject/credentials.json', SCOPES)\n",
    "            creds = flow.run_local_server(port=0)\n",
    "        with open('token.json', 'w') as token:\n",
    "            token.write(creds.to_json())\n",
    "    service = build('sheets', 'v4', credentials=creds)\n",
    "    return service\n",
    "\n",
    "service = get_google_sheets_service()\n",
    "\n",
    "# Function to push data to Google Sheet\n",
    "def push_to_sheet(service, sheet_id, range_name, data):\n",
    "    body = {\n",
    "        'values': data\n",
    "    }\n",
    "    result = service.spreadsheets().values().append(\n",
    "        spreadsheetId=sheet_id, range=range_name,\n",
    "        valueInputOption='RAW', body=body).execute()\n",
    "    print(f'{result.get(\"updates\").get(\"updatedCells\")} cells appended.')\n",
    "\n",
    "# Upload data to Google Sheet\n",
    "RANGE_NAME = \"Sheet1!A1\"\n",
    "data_to_upload = df.values.tolist()\n",
    "headers = list(df.columns)\n",
    "data_to_upload.insert(0, headers)\n",
    "push_to_sheet(service, SPREADSHEET_id, RANGE_NAME, data_to_upload)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
